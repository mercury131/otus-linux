# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  :client => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.101',
  },

  :proxy1 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.102',
  },

  :proxy2 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.103',
  },

  :nginx1 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.104',
  },

  :nginx2 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.105',
  },

  :haproxy1 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.106',
  },

  :haproxy2 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.107',
  },

  :patroni1 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.108',
  },

  :patroni2 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.109',
  },

  :patroni3 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.110',
  },

  :backup => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.111',
  },
  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "512","--cpus", "1"]

          vb.name = boxname.to_s


          end
      box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
          echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /home/vagrant/.ssh/authorized_keys		
          echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
          echo "192.168.11.102  proxy1" >> /etc/hosts
          echo "192.168.11.103  proxy2" >> /etc/hosts
          echo "192.168.11.104  nginx1" >> /etc/hosts
          echo "192.168.11.105  nginx2" >> /etc/hosts
          echo "192.168.11.106  haproxy1" >> /etc/hosts
          echo "192.168.11.107  haproxy2" >> /etc/hosts
          echo "192.168.11.108  patroni1" >> /etc/hosts
          echo "192.168.11.109  patroni2" >> /etc/hosts
          echo "192.168.11.110  patroni3" >> /etc/hosts
          echo "192.168.11.111  backup" >> /etc/hosts
      SHELL

      case boxname.to_s
      when "backup"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /home/vagrant/.ssh/authorized_keys		
		  mkdir /root/.ssh/
		  echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
		  #sudo systemctl stop firewalld
		  #setenforce 0
          yum install epel-release -y
          yum install ansible vim -y
          cp /vagrant/id_rsa /home/vagrant/.ssh/
		  cp /vagrant/id_rsa /root/.ssh/
		  chmod 0600 /root/.ssh/id_rsa
          chown vagrant:vagrant /home/vagrant/.ssh/id_rsa 
          chmod 0600 /home/vagrant/.ssh/id_rsa
          #echo "192.168.11.102  web" >> /etc/hosts
          # Create project structure
          mkdir ~/ansible
		  mkdir -p /etc/ansible/roles/
		  mkdir -p /home/vagrant/.ansible/roles/
		  mkdir -p /root/.ansible/roles/
		  cp -r /vagrant/ansible/roles/ /etc/ansible/roles/
		  cp -r /vagrant/ansible/roles /home/vagrant/.ansible/
		  cp -r /vagrant/ansible/roles /root/.ansible/
		  #cp /vagrant/ansible/laravel.yml /home/vagrant/laravel.yml
		  #cp /vagrant/ansible/inventory.yml /home/vagrant/.ansible/inventory.yml
		  export ANSIBLE_HOST_KEY_CHECKING=false
		  ssh-keyscan -H web >> ~/.ssh/known_hosts
		  # rm -rf /root/.ansible/roles/ && rm -rf /home/vagrant/.ansible/roles/ && rm -rf /etc/ansible/roles/ && cp -r /vagrant/ansible/roles /etc/ansible/roles && cp -r /vagrant/ansible/roles /home/vagrant/.ansible/ && cp -r /vagrant/ansible/roles /root/.ansible/ 
		  #ansible-playbook /home/vagrant/laravel.yml  -i /home/vagrant/.ansible/inventory.yml
		  #ansible-playbook /home/vagrant/python.yml  -i /home/vagrant/.ansible/inventory.yml
		  #ansible-playbook /home/vagrant/js.yml  -i /home/vagrant/.ansible/inventory.yml
          SHELL
		  

      end

      end
   end
end
