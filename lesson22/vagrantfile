# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
:vpnserver1 => {
        :box_name => "cdaf/CentOSLVM",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "management-net"},
				   {adapter: 3, auto_config: false, virtualbox__intnet: "tun-net"},
				   {adapter: 4, auto_config: false, virtualbox__intnet: "tap-net"},
				   {ip: '192.168.10.1', adapter: 5, netmask: "255.255.255.0", virtualbox__intnet: "management-net2"},
                ]
  },
 
 :vpnclient2 => {
        :box_name => "cdaf/CentOSLVM",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "management-net"},
				   {adapter: 3, auto_config: false, virtualbox__intnet: "tun-net"},
				   {adapter: 4, auto_config: false, virtualbox__intnet: "tap-net"},
				   {ip: '192.168.10.2', adapter: 5, netmask: "255.255.255.0", virtualbox__intnet: "management-net2"},
                ]
  },
  
  
 :vpnras1 => {
        :box_name => "cdaf/CentOSLVM",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.3', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "management-net"},

                ]
  },
  
  
 :clientras2 => {
        :box_name => "cdaf/CentOSLVM",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.255.4', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "management-net"},

                ]
  },
  
  
 :ocserv => {
        :box_name => "cdaf/CentOSLVM",
        #:public => {:ip => '10.10.10.1', :adapter => 1},
        :net => [
                   {ip: '192.168.15.1', adapter: 2, netmask: "255.255.255.0", virtualbox__intnet: "ocserv-net"},

                ]
  },
  

  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
		
		
        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end
		

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "vpnserver1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
		    mkdir /root/.ssh/
            #sysctl net.ipv4.conf.all.forwarding=1
			setenforce 0
			systemctl stop firewalld
			yum install -y epel-release
			yum install -y openvpn iperf3
			#openvpn --genkey --secret /etc/openvpn/static.key
			#cp /etc/openvpn/static.key /vagrant/openvpn/
			cp /vagrant/openvpn/static.key /etc/openvpn/static.key
			cp /vagrant/openvpn/tap/server.conf /etc/openvpn/server.conf
			systemctl start openvpn@server
			systemctl enable openvpn@server
			cp /vagrant/openvpn/tun/server.conf /etc/openvpn/servertun.conf
			systemctl start openvpn@servertun
			systemctl enable openvpn@servertun
			iperf3 -s &
			iperf3 -s -p 555 &
			

            SHELL
        when "vpnclient2"
		  box.vm.network "forwarded_port", guest: 8080, host: 8081
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            #sysctl net.ipv4.conf.all.forwarding=1
			systemctl stop firewalld
			setenforce 0
			systemctl stop firewalld
			yum install -y epel-release
			yum install -y openvpn iperf3
			openvpn --genkey --secret /etc/openvpn/static.key
			cp /vagrant/openvpn/static.key /etc/openvpn/static.key
			cp /vagrant/openvpn/client/tap/server.conf /etc/openvpn/server.conf
			cp /vagrant/openvpn/client/tun/server.conf /etc/openvpn/servertun.conf
			systemctl start openvpn@server
			systemctl enable openvpn@server
			systemctl start openvpn@servertun
			systemctl enable openvpn@servertun
			echo "TEST TAP #########################################################"
			iperf3 -c 10.10.10.1 -t 40 -i 5
			echo "TEST TUN #########################################################"
			iperf3 -c 10.11.10.4 -t 40 -i 5 -p 555

            SHELL
			
        when "vpnras1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            #sysctl net.ipv4.conf.all.forwarding=1
			systemctl stop firewalld
			setenforce 0
			yum install -y epel-release
			yum install -y openvpn easy-rsa
			mv /etc/openvpn /etc/openvpnold
			cp -r /vagrant/ras/openvpn /etc/openvpn
			systemctl start openvpn@server
			

            SHELL
			
        when "clientras2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            #sysctl net.ipv4.conf.all.forwarding=1
			systemctl stop firewalld
			setenforce 0
			yum install -y epel-release
			yum install -y openvpn
			cp /vagrant/ras/openvpn/pki/ca.crt ./ && cp /vagrant/ras/openvpn/pki/issued/client.crt ./ && cp /vagrant/ras/openvpn/pki/private/client.key ./ && cp /vagrant/ras/client.conf  ./
			#mv /etc/openvpn /etc/openvpnold
			#cp -r /vagrant/ras/openvpn /etc/openvpn
			systemctl start openvpn@server
			openvpn --config client.conf & 
			ping -c 4 10.10.10.1
			

            SHELL
			
        when "ocserv"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            #sysctl net.ipv4.conf.all.forwarding=1
			#systemctl stop firewalld
			sysctl net.ipv4.conf.all.forwarding=1
			setenforce 0
			yum install -y epel-release
			yum update -y
			yum install -y ocserv gnutls-utils
			mkdir /etc/ocserv/cert
			cd /etc/ocserv/cert/
			cp /vagrant/ocserv/ca.tmpl /etc/ocserv/cert/ca.tmpl
			certtool --generate-privkey --outfile ca-key.pem
			certtool --generate-self-signed --load-privkey ca-key.pem --template ca.tmpl --outfile ca-cert.pem
			cp /vagrant/ocserv/server.tmpl /etc/ocserv/server.tmpl
			certtool --generate-privkey --outfile server-key.pem
			certtool --generate-certificate --load-privkey server-key.pem --load-ca-certificate ca-cert.pem --load-ca-privkey ca-key.pem --template /etc/ocserv/server.tmpl --outfile server-cert.pem
			mkdir /etc/ocserv/ssl/
			cp -f ca-cert.pem server-key.pem server-cert.pem /etc/ocserv/ssl/
			mv /etc/ocserv/ocserv.conf /etc/ocserv/ocserv.conf.bak
			cp -f /vagrant/ocserv/ocserv.conf /etc/ocserv/ocserv.conf
			firewall-cmd --add-port=443/tcp --permanent
			firewall-cmd --add-port=443/udp --permanent
			firewall-cmd --permanent --add-masquerade
			csf -r
			echo "net.ipv4.ip_forward = 1" >>  /etc/sysctl.conf
			touch /etc/ocserv/passwd
			ocpasswd -c /etc/ocserv/passwd -g default test
			systemctl start ocserv
			systemctl enable ocserv
			systemctl status ocserv
			

			

            SHELL
        



        end

      end

  end
  
  
end

