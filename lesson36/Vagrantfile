# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  :ipa => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.101',
  },
  :client => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.102',
  }
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
		  
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "8192","--cpus", "4"]
        #   vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
          vb.name = boxname.to_s

        #   boxconfig[:disks].each do |dname, dconf|
        #       unless File.exist?(dconf[:dfile])
        #         vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
        #       end
        #       vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
        # end
          end
      box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL

      case boxname.to_s
      when "client"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /home/vagrant/.ssh/authorized_keys		
		  echo " 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 " > /etc/hosts
		  echo "192.168.11.101   ipa.domain.local ipa domain.local" >> /etc/hosts
		  echo "192.168.11.102   client.domain.local client" >> /etc/hosts
		  echo "search domain.local" > /etc/resolv.conf
		  echo "nameserver 192.168.11.101" >> /etc/resolv.conf
		  hostname client.domain.local
		  mkdir /root/.ssh/
		  echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
		  #sudo systemctl stop firewalld
		  #sudo systemctl disable firewalld
		  firewall-cmd --permanent --add-service=dns
		  firewall-cmd --reload
		  yum update -y
		  yum -y install freeipa-client ipa-admintools
		  yum groups install -y "Network File System Client"
		  systemctl start nfs
		  systemctl start nfs-secure
		  mkdir /mnt/nfsshare
		  showmount -e ipa.domain.local
		  echo 'ipa.domain.local:/upload /mnt/nfsshare nfs sec=krb5p,_netdev 0 0' >> /etc/fstab		  
		  #ipa-client-install --mkhomedir --hostname=`hostname -f`  --server=ipa.domain.local --domain domain.local --realm DOMAIN.LOCAL
          SHELL
		  
      when "ipa"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
		  setenforce 0
		  echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
		  yum update -y
          #yum install epel-release -y
          yum install ansible vim -y
		  yum update nss -y
          cp /vagrant/id_rsa /home/vagrant/.ssh/
		  cp /vagrant/id_rsa /root/.ssh/
		  chmod 0600 /root/.ssh/id_rsa
          chown vagrant:vagrant /home/vagrant/.ssh/id_rsa 
          chmod 0600 /home/vagrant/.ssh/id_rsa
		  hostnamectl set-hostname domain.local
		  echo " 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 " > /etc/hosts
		  echo " ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6" >> /etc/hosts
          echo "192.168.11.102  client.domain.local client" >> /etc/hosts
		  echo "192.168.11.101  ipa.domain.local ipa domain.local" >> /etc/hosts
		  #yum install ipa-server bind-dyndb-ldap ipa-server-dns -y
		  yum install ipa-server ipa-server-dns -y
		  #systemctl stop firewalld
		  #systemctl disable firewalld
		  firewall-cmd --permanent --add-service=ntp
		  firewall-cmd --permanent --add-service=http
		  firewall-cmd --permanent --add-service=https
		  firewall-cmd --permanent --add-service=ldap
		  firewall-cmd --permanent --add-service=ldaps
		  firewall-cmd --permanent --add-service=kerberos
		  firewall-cmd --permanent --add-service=kpasswd
		  firewall-cmd --permanent --add-service=dns
		  firewall-cmd --reload
		  echo -e "yes\nipa.domain.local\ndomain.local\nDOMAIN.LOCAL\nsuperadmin123\nsuperadmin123\nsuperadmin123\nsuperadmin123\nyes\nyes\n\nno\nyes" | ipa-server-install
		  sleep 10
		  echo -e "superadmin123" | kinit admin
		  klist
		  ipa service-add nfs/ipa.domain.local
		  echo -e "ktadd nfs/ipa.domain.local\nquit" | kadmin.local
		  mkdir /upload
		  chgrp nfsnobody /upload/ && chmod g+w /upload/
		  systemctl start nfs-server ; systemctl enable nfs-server
		  echo '/upload client.domain.local(rw,sec=krb5p,sync)' >> /etc/exports
		  firewall-cmd --permanent --add-service={mountd,nfs,rpc-bind}
		  firewall-cmd --reload		  
		  ipa user-find admin
		  echo -e " testuser123" | ipa user-add testuser  --first=Test --last=User --email=test@domain.local  --shell=/bin/bash --password
		  ipa dnsrecord-add domain.local client --a-rec 192.168.11.102
          # Create project structure
          mkdir ~/ansible
		  mkdir -p /etc/ansible/roles/ && mkdir -p /home/vagrant/.ansible/roles/ && mkdir -p /root/.ansible/roles/
		  cp -r /vagrant/roles/* /etc/ansible/roles/ && cp -r /vagrant/roles /home/vagrant/.ansible/ && cp -r /vagrant/roles /root/.ansible/roles/
		  cp /vagrant/install-client.yml /home/vagrant/install-client.yml
		  cp /vagrant/hosts /home/vagrant/.ansible/hosts
		  export ANSIBLE_HOST_KEY_CHECKING=false
		  ssh-keyscan -H client >> ~/.ssh/known_hosts
		  #ansible-playbook /home/vagrant/install-client.yml  -i /home/vagrant/.ansible/hosts
		  
        SHELL
      end

      end
   end
end
