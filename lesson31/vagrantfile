# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
  :innodbcluster => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.101',
  },
  
  :innodbcluster2 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.102',
  },
  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "2048","--cpus", "4"]
        #   vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
          vb.name = boxname.to_s

        #   boxconfig[:disks].each do |dname, dconf|
        #       unless File.exist?(dconf[:dfile])
        #         vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
        #       end
        #       vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
        # end
          end
      box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
          cp ~vagrant/.ssh/auth* ~root/.ssh
      SHELL

      case boxname.to_s
      when "innodbcluster"
        box.vm.provision "shell", run: "always", inline: <<-SHELL		  
		  sudo systemctl stop firewalld
		  mkdir -p ~root/.ssh
		  cp ~vagrant/.ssh/auth* ~root/.ssh
		  #yum install epel-release -y
		  #yum install docker  jq -y
		  systemctl stop firewalld
		  echo "192.168.11.101  innodbcluster" >> /etc/hosts
	      echo "192.168.11.102  innodbcluster2" >> /etc/hosts
		  systemctl disable firewalld
		  yum install epel-release -y
		  yum install -y yum-utils  device-mapper-persistent-data lvm2 -y
		  yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo
		  yum-config-manager --enable docker-ce-nightly
		  yum install docker-ce docker-ce-cli containerd.io -y
		  yum install docker-compose -y
		  yum remove docker-compose -y
		  curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
		  chmod +x /usr/local/bin/docker-compose
		  ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
		  #cp /vagrant/docker.service /etc/systemd/system/docker.service
		  systemctl daemon-reload
		  sleep 30
		  systemctl start docker
		  setenforce 0
		  docker swarm init --advertise-addr 192.168.11.101 > /vagrant/swarm.txt
		  #docker network create testservice
		  cd /vagrant/deploy
		  #docker-compose up -d
		  docker stack deploy --compose-file docker-compose.yml innodbcl
		  yum install mysql -y
		  sleep 60
		  docker stack services innodbcl
		  #docker stack rm innodbcl
		  docker ps
		  #docker node ls
		  #mysql -u dbwebapp -pdbwebapp -h 127.0.0.1 -P 6446

          SHELL
		  
      when "innodbcluster2"
        box.vm.provision "shell", run: "always", inline: <<-SHELL		  
		  sudo systemctl stop firewalld
		  mkdir -p ~root/.ssh
		  cp ~vagrant/.ssh/auth* ~root/.ssh
		  #yum install epel-release -y
		  #yum install docker  jq -y
		  systemctl stop firewalld
		  echo "192.168.11.101  innodbcluster" >> /etc/hosts
	      echo "192.168.11.102  innodbcluster2" >> /etc/hosts
		  systemctl disable firewalld
		  yum install epel-release -y
		  yum install -y yum-utils  device-mapper-persistent-data lvm2 -y
		  yum-config-manager --add-repo  https://download.docker.com/linux/centos/docker-ce.repo
		  yum-config-manager --enable docker-ce-nightly
		  yum install docker-ce docker-ce-cli containerd.io -y
		  yum install docker-compose -y
		  yum remove docker-compose -y
		  curl -L "https://github.com/docker/compose/releases/download/1.25.4/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
		  chmod +x /usr/local/bin/docker-compose
		  ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose
		  cp /vagrant/docker.service /etc/systemd/system/docker.service
		  systemctl daemon-reload
		  sleep 30
		  systemctl start docker
		  setenforce 0
		  $(cat /vagrant/swarm.txt | grep SWMTKN)
		  #docker network create testservice
		  #cd /vagrant/
		  #docker-compose up -d
		  #yum install mysql -y
		  #sleep 600
		  #docker ps
		  #mysql -u dbwebapp -pdbwebapp -h 127.0.0.1 -P 6446



          SHELL
		  

      end

      end
   end
end
