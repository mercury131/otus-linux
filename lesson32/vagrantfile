# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']

MACHINES = {
:postgres1 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.101',
  },
  
  :postgres2 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.102',
  },
  
  :backup3 => {
        :box_name => "cdaf/CentOSLVM",
        :ip_addr => '192.168.11.103',
  },

  
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
		box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "1024","--cpus", "2"]

          vb.name = boxname.to_s

          end
        

		

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "postgres1"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /home/vagrant/.ssh/authorized_keys		
		    mkdir /root/.ssh/
		    echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
		    sudo systemctl stop firewalld
			yum install epel-release  -y
			echo "192.168.11.101  postgres1" >> /etc/hosts
			echo "192.168.11.102  postgres2" >> /etc/hosts
			echo "192.168.11.103  backup3" >> /etc/hosts
			setenforce 0
            SHELL
			
        when "postgres2"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /home/vagrant/.ssh/authorized_keys		
		    mkdir /root/.ssh/
		    echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
		    sudo systemctl stop firewalld
			yum install epel-release  -y
			echo "192.168.11.101  postgres1" >> /etc/hosts
			echo "192.168.11.102  postgres2" >> /etc/hosts
			echo "192.168.11.103  backup3" >> /etc/hosts
			setenforce 0

            SHELL

        when "backup3"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            yum install epel-release -y
			setenforce 0
            echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /home/vagrant/.ssh/authorized_keys		
		    mkdir /root/.ssh/
		    echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQulD+SK4ggadzuJZdksaB7VVAXzDbeYHkd41savMnzxLiVXW4SFUXlBx4c1B8J4thzlgH/dXiDKgyPsjPPiHJaao446jJrJxBT/VATUg+MEYY48qUifCg9cTffAis512MhyvCGInfU2B/FMCz8zF9P0sDp+NoHWOCamawJ+B2Sk3r9VgtS30l34WTDBINbcqtlEq1IKTWHHLuDw84bRLHBF4x8bn6REYjb+UF98zHlhV539iikHjZSqQa1KHnp+1Ew9IY1WoUDukjwuAa6YGkWjO1ughAlZ4xpzgp1coOp+C0tTTI4V45soO2V2fG1xXIBqGteYv/oBDDZfQ6kj3z" >> /root/.ssh/authorized_keys
			yum install libselinux-python -y
            yum install ansible vim -y
            cp /vagrant/id_rsa /home/vagrant/.ssh/
		    cp /vagrant/id_rsa /root/.ssh/
		    chmod 0600 /root/.ssh/id_rsa
            chown vagrant:vagrant /home/vagrant/.ssh/id_rsa 
            chmod 0600 /home/vagrant/.ssh/id_rsa            
			echo "192.168.11.101  postgres1" >> /etc/hosts
			echo "192.168.11.102  postgres2" >> /etc/hosts
			echo "192.168.11.103  backup3" >> /etc/hosts
			# Create project structure
            mkdir ~/ansible
		    mkdir -p /etc/ansible/roles/
		    mkdir -p /home/vagrant/.ansible/roles/
		    mkdir -p /root/.ansible/roles/
			# rm -rf /root/.ansible/roles/ && rm -rf /home/vagrant/.ansible/roles/ && rm -rf /etc/ansible/roles/ && cp -r /vagrant/ansible/roles /etc/ansible/roles && cp -r /vagrant/ansible/roles /home/vagrant/.ansible/ && cp -r /vagrant/ansible/roles /root/.ansible/ 
		    cp -r /vagrant/ansible/roles /etc/ansible/roles && cp -r /vagrant/ansible/roles /home/vagrant/.ansible/ && cp -r /vagrant/ansible/roles /root/.ansible/ 
			cp /vagrant/ansible/playbook.yml /home/vagrant/playbook.yml 
			cp /vagrant/ansible/inventory.yml /home/vagrant/.ansible/inventory.yml
		    export ANSIBLE_HOST_KEY_CHECKING=false
		    # ansible-playbook /home/vagrant/playbook.yml  -i /home/vagrant/.ansible/inventory.yml
			#sudo -u postgres psql -c "CREATE DATABASE replitest2"
			#sudo -u postgres psql -c "\l"
            SHELL

			

			

		
			
        end

      end

  end
  
  
end

